#summary v4.1 Custom Board FAQ
= Custom Board v4.1 FAQ =
<b>F</b>requently <b>A</b>sked <b>Q</b>uestions

----
*Q*. Where do I find v4.1 board construction tips and advice?

*A*. There's a separate [PcbAssembly Build Your Own Board] wiki page for that, [PcbAssembly here]. What follows in this FAQ is more aimed at completed v4.1 boards, being installed into a '9X transmitter housing.

----
*Q*. *How do I connect an LED back-light to connector K5?*

*A*. *VERY CAREFULLY* Seriously. The centre pin is GND and the RIGHT-hand pin (labelled '1') is +ve output power for an LED back-light. It includes a 200 ohm series current limiting resistor, which gives a comfortable and practical brightness on the HobbyKing LED back-light module. 

If you need a different brightness, you could use your own series current limiting resistor off the left hand pin (3), which is a switched 5V output, utilising its own dedicated regulator as well as a safety fuse. The regulator is rated at _maximum_ 100mA and fused for safety at 250mA (if it gets fried and shorts out, it shouldn't take out the radio. This has not been tested.) 

*CAUTION*: There is no series current limiting resistor on the the left-hand, pin-3!

----
*Q*. *How do I use an electro luminescent (EL) back-light?*

*A*. You will need a [http://www.smartieparts.com/shop/index.php?main_page=product_info&cPath=3&products_id=333 SmartieParts] or equivalent EL driver board, to provide the correct type of power for an electro luminescent (EL) back-light.

There are three terminals labelled 'EL B/lite', in the upper left area of the main board. These were originally designed to allow the SmartieParts EL driver board to be mounted directly over them, using individual header pins as dual-purpose stand-off and electrical connections. The board is placed such that the right-hand three driver board pads are soldered to the header stand-off pins, as viewed with the pads at the top of the board. Clear as mud? ... I'll try to draw it ...
{{{
+-----------+
| o o o o o |
.     1 2 3 .
.           .
.           .
+-----------+
}}}
Pads/holes labelled 1, 2 and 3 on the EL driver board connect to the v4.1 main board. The left-hand two pads on the driver board then go off to the EL back-light itself. Once wired so, the EL back light should just work.
 
The driver board should sit about *5mm above the main board* -- *not* down on the header-pin insulators -- to remain well clear of the MENU/EXIT push button leads sticking up from the board.  

If standard, high-tensile header pins / stand-offs are used for the connection, then no further insulation will be required. 

If soft wire of some kind is used instead, then some double-sided sticky padding or something could be used to mount the driver board to the main board.

Either way, there should be just enough clearance at the bottom left of the driver board for a screw driver to access the main board mounting screw, located near-by.

----

*Q*. *How should I set jumpers J1 (back-light control) and J4 (Vibrator control)?*

*A*. By default, pins 1 & 2 are shorted together on both J1 and J4. For J1, that's the left hand two pads. For J4, it's the upper two pads.

You may want to refer to the circuit schematic to learn what the other positions might be good for.

----

*Q*. *Why doesn't the internal piezo beeper work?*

*A*. Because the v4 firmware currently only supports a 'speaker' (usually a cheap headphone element) connected to the 'Spkr' port on the PCB. This is the 2-pin header, labelled 'Spkr' if the upper center-right area of the PC board. 

The factory installed piezo beeper (shrieker in some cases! :p) should work just fine, once code exists to turn it on and off.

The same is true of the Vibrator output. Although the port has been tested to provide the correct, regulated voltage under firmware control, there hasn't actually been any real code written for it yet.

----
*Q*. *What type of 'speaker' element should I use?

*A*. This one can actually be a bit of a problem, as it turns out.

The first few headphone elements used by Gruvin for the several prototype builds all produced plenty of sound volume. He thus believed that this would be the more common case. However since then, we have all (including Gruvin) been having difficulty finding new elements that produce a reasonable sound level. (It is possible, though unlikely, that the change to the ATmega2560 chip might somehow have something to do with this.) 

That said, the 'speaker' element from cheap headphones is what was intended. These are the roughly 1 inch (25mm) diameter types, with the clear plastic diaphragm. They're usually rated somewhere around 32-ohm and are to be found in most computer or portable music headphones, other than the ones the go inside your ear, of course.

There are also two 200-ohm resistors near the 'Spkr' socket on the v4.x boards. These are in fact wired in parallel, to provide 100-ohms total. The intention here was to allow for variations in available speaker elements. You can either short the resistors out with a fine wire link for more volume or carefully remove one resistor to reduce sound output. (Removal is unlikely to be needed.) 

Consequently -- and as mentioned above -- a lot of us have been needing to short out the resistors (for 0-ohms) to get more volume from quieter speaker elements -- only to find that it's still not loud enough in about half the most recent cases.
 
A long term solution for this is still 'being formulated'. The obvious quick solution would be to update the firmware to go back to using the factory supplied piezo beeper, which s almost always much louder than any speaker. Plans to do this exist, but we haven't got around to it as at this writing, sorry.

----
*Q*. *How are the rotary encoders supposed to be wired?*

*A*. Viewed from the back of the encoder, the wires going to controller board pin numbers 1, 2, 3 and 4 should look something like this ...

{{{
  3   2
  | | |
     \
  |   |
  4   1
}}}

... where the upper-middle terminal is connected to the lower right terminal, as shown. (This is the GND or 0V wire.)

The above wiring will make it such that pushing the top of the encoder knob away from you will increase its value -- the same for both left and right encoders. If you prefer to have the encoders operate in the opposite direction, then swap wires 2 & 3. Might I also suggest wiring as follows, ...
{{{
  2   3
  | | |
   /
  |   |
  1   4
}}}
... to keep cable flat, with no twists, should you be using ribbon cable. (It doesn't really matter for individual wires as shown in the images below.)

Here are some images of Cam's nice and tidy installation ...

|| [http://gruvin9x.googlecode.com/svn/wiki/V41FAQ.attach/rot-enc-inside1.jpg] || [http://gruvin9x.googlecode.com/svn/wiki/V41FAQ.attach/rot-enc-inside2.jpg] || 
|| [http://gruvin9x.googlecode.com/svn/wiki/V41FAQ.attach/rot-enc-outside.jpg] || [http://gruvin9x.googlecode.com/svn/wiki/V41FAQ.attach/rot-enc-wiring.jpg] ||

----
*Q*. How should I install the RTC/SD-card Board?

*A*. Any way you like, really. But [SdcardBoard please see here] for how Gruvin does it.

----

*Q*. *How do I set the v4 board's ATmega2560 MCU option fuses, before the first Flash programming?*

*A*. If you have purchased a ready-made board, the fuses will already be set correctly.

If you have built your own board and assuming you have the cross-compiler environment and project source code installed, along with a `Makefile` set up for your particular AVRDUDE programming device, then you can execute the following command from the `src/` directory ...

  `$ make wfuses`

If you wish to install a pre-compiled .HEX binary firmware version, rather than building from source, you can use AVRDUDE manually to set  MCU fuses, in a similar way to the following ...

  `$ avrdude -c usbasp -P usb -p atmega2560 -U hfuse:w:0x11:m -U lfuse:w:0xd7:m -U efuse:w:0xfc:m`

----