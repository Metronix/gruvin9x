#summary About this project / Contact information
#labels Featured

<img src="http://gruvin9x.googlecode.com/svn/wiki/About.attach/turnigy9x.jpg" align="right">
= Introduction =

This project started out as a kind of 'place holder' for the author's personal upgrades, hacks and mods to his [http://code.google.com/p/er9x/ ER9X]-powered Turnigy 9X V2 RC transmitter. It hasn't really got much past that, still. But, as time wears on, more and more supporting documentation and other data gets added, so as to keep it all in one place. That tend to start making the project look like a "serious deal". Hmmm. It really isn't, is it? :/ I don't have time in my life for a "serious deal"! :p

Initial intentions were to get to know the ER9X crew, maybe becoming a contributor at some point. However, gruvin9x began to fork off in its own life quite quickly and, well, I just kept going. Eventually, a few of the other project owners and contributors got in contact to say hello, which has been very nice. I still keep a pretty low profile on the other project as I don't wish to create a stir. Besides, they're all doing just fine. It's all good stuff! :-D

= Project Detail =

The main intention for gruvin9x is to provide a growing range of features and functions to support Fr-Sky telemetry natively on the '9X -- as well as mass storage using MMC and/or SD Flash cards. (The latter eventually having been relegated to a whole new, custom main board upgrade!)

*HOWEVER* -- compatibility with the stock V2 '9X transmitter will be retained as far as possible. So fear not. There will always be a gruvin9x version available to run on the stock unit. There will also be versions that support manual circuit hacks for telemetry (and other things) that do _not_ require the new PCB. (See 'Bigger Plans', below.)

Efforts will be made to keep up with new features of ER9X on a request-by-request basis. Please use the [http://code.google.com/p/gruvin9x/issues/list Issue tracker] (link on menu above) to make such requests.

== Beginnings ===
The project started off with a few relatively minor tweaks to ER9X, as it was at the time.

Way back at revision 46 (r46), better key-repeat delays and a hack to get variable frequency tones through a speaker, instead of the single-pitch 'beeper' of the stock unit, were implemented.

The latter resulted in low/mid/higher pitch key and trim button beeps. But its long term intention was to provide a greater range of unique sounds for eyes-off telemetry data. See [SpeakerReplacement Why I replaced the stock beeper with a speaker] for details.

When I flashed a local RC modeller's stock radio with gruvin9x the first time, there were problems with the stock 8-pack-of-alkaline cells causing a lot of jitter in the battery voltage display. Since then, gruvin9x has had a running0-average stabiliser to fix that.

<img src="http://gruvin9x.googlecode.com/svn/wiki/Frsky.attach/got-data.jpg" align="right">
== Fr-Sky Telemetry Support ==

After a while, TH's original coding and methods started to become more clear and familiar. (Thomas is something of a genus C programmer IMHO too, by the way!) So I started delving more into menus, custom settings and the like, with support of Fr-Sky two-way telemetry in mind. See [FrSky here] for details of progress to date.

 _A cool idea I got from Bruce over at RCModelReviews.com (see below) is to utilise his onboard telemetry hub to give each equipped model a unique ID. When this ID is detected by a Fr-Sky enabled '9X, it could automatically load the correct model programming -- or warn if it's wrong -- or whatever. I'm even considering the idea of storing the programming data in the mode itself, as a radical departure from the way things have been all these years. In this way, any compatible '9X system would 'just know' how to control a given, suitably equipped model. You'd never have to worry about the number of model memories again, because each model stores its own data! Who knows? One day, this sort of thing might become standardised and used by all reputable RC radio brands._

== RCModelReviews.com Telemetry Hub Support ==

Plans exist to support the [http://www.rcmodelreviews.com/frsky_telemetry_project.shtml RCModelReviews (RCMR) Telemetry Hub], once it is ready for public release. The basic goal will be to duplicate the functions of the stand-alone 'dashboard' partner for the hub, inside the 9X, using its own LCD display, user interface, etc.


= Bigger Plans - A Whole New Main Board =

There are a number of somewhat challenging '9X hardware wiring modifications required just to get access to telemetry data. That alone is not too bad -- but we also want access to more of the IO pins currently (lazily) spread out over nearly all the higher function ports of the host ATmega64A chip. Most notably for the purposes of gruvin9x goals, dedicated access to MOSI/MISO/SCK (on Port B) for SPI mode data transfer to/from an MMC/SDCARD is needed.

These and other requirements led to a state of temporary insanity and the commencing of a complete re-work of the entire main board PCB! A near duplicate of the stock PCB was first worked up, then changes and additions were added. Find details on the [PCB] wiki page.

[http://gruvin9x.googlecode.com/svn/wiki/TurnigyV2.attach/custompcb3d_thm.jpg]

= Intended Features =
(*Telemetry* support was the primary inspiration for this project fork)
 * Ongoing Fr-Sky telemetry support extensions. ([http://code.google.com/p/gruvin9x/wiki/FrSky Now under well under way].)

 * On-board audible aircraft AoA (Angle of Attack) instrument support using Fr-Sky telemetry. (See [SpeakerReplacement Why I replaced the stock beeper with a speaker] for more detail.)

 * On-board audible [http://en.wikipedia.org/wiki/Variometer variometer] support, also using Fr-Sky telemetry.

 * Native 9X LCD/Sound emulation of [http://rcmodelreviews.com/ RCModelReviews] Telemetry Dashboard, to a lesser or greater extent depending on ... stuff ... (He hasn't released a final working version yet.)

 * Addition of _MMC/SDCARD_ socket to facilitate bulk storage of system settings, model programming and telemetry data -- in addition to or separate from existing EEPROM storage. (This will likely now only be supported on the upgrade PCB, due to limited program space for implementing convenient DOS/FAT32 file system abilities.)

 * Some kind of audio file playback for alarms, telemetry "voice" and so forth. (Many options to choose from, including MP3 playback from MMC card for example. R&D continues.)

 * Ongoing development of a complete replacement PCB for '9X radio to give more program pace, MMC/SDCARD interface and more. See the [Circuitry] wiki page.

 * Support for other telemetry systems (ex. JETI)

 * ... more

= Contacting Gruvin =

Oops! As of this writing, I've discovered that the Google Code system for obtaining project owner email addresses is broken. Hopefully, Google will fix this very soon. Meanwhile, fear not ...

Normally, you would visit my Google Projects user profile, then click the '...' in `gru...@gmail.com` to reveal the full address, after [http://en.wikipedia.org/wiki/CAPTCHA captcha] verification. On the other hand, if you're _very_ clever, you might just be able to work that out for yourself. *Hint* - my user alias is `gruvin`, not `gru...` ;-)

*HOWEVER*, I'd really like you to please consider joining the [http://groups.google.com/group/gruvin9x-discuss gruvin9x discussion group] and communicating with the group there -- unless it's a personal matter, of course. Thanks :-D