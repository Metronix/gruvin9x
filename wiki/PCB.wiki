#summary Custom PCB
#labels Phase-Implementation,Phase-Design
<img src="http://gruvin9x.googlecode.com/svn/wiki/PCB.attach/pcb_v3.2_3d_top.gif" hspace="10" width="320" align="right">
= Custom Main Board Design =

== Why? ==

The primary intention with this new main board is to provide a more powerful and flexible platform for the TH/ER/gruvin9x open source firmware to run on – because we can :p. The design is "open", so you can follow its progress as well as make requests and suggestions for additions and improvements – or, of course, get involved more directly and do those for yourself.

Initial intentions are to ...

 * provide a programming header capable of supporting an onboard USB programming board. (For now, this header simply enables connection of an AVR ICP programmer.) 
 * add RS-232 and TTL level telemetry serial data send/receive ports
 * free up most of PORTB for use with an MM/SD card interface for mass storage
 * upgrade the processor for more program, RAM and EEPROM storage memory

Many more ideas are swimming around in the author's head, as well as several suggestions from others. Just how far this design will go, well, it remains to be seen.

== License ==

This logic board PCB design is licensed under the [http://www.tapr.org/TAPR_Open_Hardware_License_v1.0.txt TAPR Open Hardware License v1.0]. The license is very similar to the GPL of this project's related firmware source code, but includes additional protection against the likes of what this author might term, 'hostile patent acts'. In other words, like the GPL license for software source code, the TAPR Open Hardware License seeks to ensure that the openness of this particular design shall endure. The license is NOT a non-commercial license. This design _is_ able to be used by licensees for commercial purposes, under the terms of the OHL license.

== Progress ==

As a starting point, a PCB design was worked up from scratch in [http://kicad.sourceforge.net/ KiCAD] to closely replicate the wiring and functions of Turnigy V2 '9X logic board. See [http://code.google.com/p/gruvin9x/source/browse/#svn/trunk/pcb/original /trunk/pcb/original/] (as of r155). From there, numerous changes and additions were made -- and continue to be made, as features and versions progress.

The first custom PCB actually built was, somewhat oddly, versioned v2.14. A few minor bugs were found, additions and changes made and a  second custom board design got underway. As of this writing, the v3.2 board is probably ready for production. But I want to wait until I've the mass storage interface working first, just in case some last minute bugs come to light during that process.

Besides the bug-fixes, a few notable changes were made for V3 ...

 1. The speaker tone generator is now using waveform generator mode on Timer0, output on PB7, which produces much cleaner, smooth sounding tones. Previous internal timing from Timer0 has been moved to Timer2. 

 2. PB7 used to be the LCD back-light control output. This has now been moved to PC0, and appears on a 3-pin break-out with pin spacing to accept the GND/SWITCH/VCC inputs of the [http://smartieparts.com/ SmartieParts.com] LCD back-light driver PCB. I did this to give the back-light driver board a proper home, rather than having to hot-glue it "somewhere".

 3. The original, stock "buzzer" output is retained along with the, now separate speaker output. This make using a speaker optional, and also allows the buzzer output to be used independently for its own beeps and buzzes or to drive a vibrating alert motor. The program code will probably be adjusted such that both speaker and buzzer output work simultaneously. The idea for that being to simply cut one trace to disable the buzzer if you have a speaker, or install a vibrating motor in the buzzer's place.

 4. Not a change, but the 5x2 ICP header pins remain for the programming interface. There is a plan to make a programmer interface board to sit permanently on this header, thus making a USB socket available. However, that plan is low priority.

Of course, all of the above comes under conditional code build control, using make directives in the typical fashion. EG. `make PCBV2`. So, if you don't have a V3 PCB, you will still be able to build gruvin9x for the stock hardware, expecting things to work properly, albeit lacking certain features, of course.

It is planned to offer the "V3" PCB (possibly pre-constructed?) to whomever wants it. This will depend on demand. A DigiKey.com part no. kitset of parts will be available as well. Of course, anybody can have their own PCBs manufactured from the open design files. Though, I would suggest you wait until I've built the thing first and tested it out.

Here's a (Photoshop'd) KiCAD 3D perspective of the present v3.2 design ...

[http://gruvin9x.googlecode.com/svn/wiki/PCB.attach/pcb_v3.2_3d_top.gif]

*Past Milestones in descending date order ...*

2011-01-14: First prototype board fully constructed, code updated and functioning. There were some issues with the wiring layout of the trim switches that will need to be fixed on the V3 board. But otherwise, everything seems to be working.  All in all, it doesn't make much sense to produce another V2 prototype board, since the V3 board will include several fixes and enhancements.

Next step is probably going to be to take advantage of the extra Flash space (now 256KBytes) and start playing with MM/SDCARD mass storage.

2010-12-30: Components and PCBs have arrived (ahead of schedule). Have ordered components to make up the 'plug' end of the 2-way, 3-way and 8-way JST sockets, which I had thought were included with same. I'm elated to report that the PCB mounting holes and push-button-switch physical locations are within spec and fit well into the actual radio '9X cabinet. (That had been one of my greater concerns during the design process.)

2010-12-22: [http://gruvin9x.googlecode.com/svn/trunk/pcb/rev2.14-frozen/production/gruvin9x-bom.xls  Components] to build three prototypes ordered from Digikey.com

2010-12-15: A first batch of 10 (MOQ) prototype PCB's ([http://gruvin9x.googlecode.com/svn/trunk/pcb/rev2.14-frozen rev2.14]) ordered.

== Schematics ==

=== PostScript and PDF Files ===

 * New gruvin9x custom Main PCB rev2.14 (production frozen) - [http://gruvin9x.googlecode.com/svn/trunk/pcb/rev2.14-frozen/gruvin9x.pdf PDF] | [http://gruvin9x.googlecode.com/svn/trunk/pcb/rev2.14-frozen/gruvin9x.ps PS]
 * Stock V2 Main PCB - [http://gruvin9x.googlecode.com/svn/trunk/pcb/actual_v2_9x/gruvin9x_v2_actual.pdf PDF] | [http://gruvin9x.googlecode.com/svn/trunk/pcb/actual_v2_9x/gruvin9x_v2_actual.ps PS]
 * Hacked V2 Main PCB - [http://gruvin9x.googlecode.com/svn/trunk/pcb/hacked/gruvin9x-hacked.pdf PDF] | [http://gruvin9x.googlecode.com/svn/trunk/pcb/hacked/gruvin9x-hacked.ps PS] (Speaker, Fr-Sky telemetry RXD and USART1 freed - hacked unit IE. not a new PCB.)


== KiCAD Circuit Schematic and PCB Files ==

Ongoing circuit/PCB work (snapshots as and when uploaded) reside at [http://code.google.com/p/gruvin9x/source/browse/#svn/trunk/pcb/original /trunk/pcb/]

To download all the PCB design related files only (without project source, docs, etc) ...

{{{
svn checkout http://gruvin9x.googlecode.com/svn/trunk/pcb gruvin9x-pcb
}}}

... or just check out or update the full trunk

... or of course you can use the Google Code 'browse' link above to find them that way.

== Preview ==

2010-12-02: A final draft of the PCB based on [http://gruvin9x.googlecode.com/svn/trunk/pcb/rev2.1/gruvin9x_rev21.pdf schematic rev2.1] has been completed. (All files updated in `/trunk/pcb` as at r159). I'm waiting on some peer review and comments before committing this to a manufacturer. Time frame unknown.

The board includes the total re-wire of all trim and button switches into a 4x4 scanned matrix to free up most of Port B. This gives us dedicated I/O ports for the MMC/SDCARD and a couple spares as well -- with theoretically only very minor CPU load for scanning the inputs. 

The connector for the MMC/SDCARD interface can be seen at lower/middle of the image below. The two connectors to the lower right are the TTL and RS-232 level telemetry TX/RX ports. A 2-pin connector on the upper edge is for the left-hand and right-hand trim switch 'common' connections. These replace their respective connections to ground, in order to work with the new 4x4 input matrix.

This new main board will receive an *ATmega2561* (256K Flash, 4K EEPROM, 8K SRAM). I have thus far decided to keep ATmega running at 5V, though it's certainly tempting to move down to 3.3V, since the LCD screen and SDCARD currently need a total of 31 resistors just to down-convert the voltage! However, I'm concerned about possible noise increase on the ADC inputs, should the operating voltage be lowered, and a couple of other minor issues too. So at 5 Volts we stay.

*The 3D image from KiCAD* as at r155 ...

[http://gruvin9x.googlecode.com/svn/wiki/PCB.attach/kicad-pcb-r21-3d-top.jpg]

NOTE: Since moved on to rev2.11 with a few minor changes/additions, like RF decoupling caps on the KEYXn inputs and some tidying up here and there. Work continues! :-D 


=== Previously ===

NOTE: These images (below) as at r122 ...

[http://gruvin9x.googlecode.com/svn/wiki/PCB.attach/PCB-final-mock.jpg]

The above image is merely a PhotoShop mock-up based on the various layer outputs from KiCAD. 

=== Cost ===

The present best quote for low volume PCB manufacture is around the USD$15 mark -- for one of 10 boards with no components installed. Manufacturing of a prototype board will likely not happen until at least the telemetry and mass storage mods have been done. That will include break-outs for any remaining spare port pins and should get the hardware to a point where nothing additional is needed. 

[http://gruvin9x.googlecode.com/svn/wiki/PCB.attach/kicad-pcb-3d-top.jpg]

[http://gruvin9x.googlecode.com/svn/wiki/PCB.attach/kicad-pcb-3d-bottom.jpg]